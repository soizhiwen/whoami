---
import { Code } from "astro-expressive-code/components";

import AcademicLayout from "../layouts/AcademicLayout.astro";
import Figure from "../components/academic/Figure.astro";
import Image from "../components/academic/Image.astro";
import ThreeColumns from "../components/academic/ThreeColumns.astro";

const metadata = {
  title: "TimeWak: Temporal Chained-Hashing Watermark for Time Series Data",
  authors: [
    {
      name: "Zhi Wen Soi",
      url: "https://soizhiwen.com",
      notes: ["1", "*"],
    },
    {
      name: "Chaoyi Zhu",
      url: "https://chaoyitud.github.io",
      notes: ["2", "*"],
    },
    {
      name: "Fouad Abiad",
      url: "https://www.linkedin.com/in/fouadabiad",
      notes: ["2"],
    },
    {
      name: "Aditya Shankar",
      url: "https://www.linkedin.com/in/aashankar",
      notes: ["2"],
    },
    {
      name: "Jeroen M. Galjaard",
      url: "https://www.linkedin.com/in/jmgaljaard",
      notes: ["2"],
    },
    {
      name: "Huijuan Wang",
      url: "https://www.tudelft.nl/ewi/over-de-faculteit/afdelingen/intelligent-systems/multimedia-computing/people/huijuan-wang",
      notes: ["2"],
    },
    {
      name: "Lydia Y. Chen",
      url: "https://lydiaychen.com",
      notes: ["1", "2", "†"],
    },
  ],
  conference: "NeurIPS 2025 Spotlight",
  notes: [
    { symbol: "*", text: "Equal contribution" },
    { symbol: "†", text: "Corresponding author" },
  ],
  institutions: [
    { symbol: "1", text: "University of Neuchâtel" },
    { symbol: "2", text: "Delft University of Technology" },
  ],
  links: [
    {
      name: "Paper",
      url: "https://arxiv.org/pdf/2506.06407",
      icon: "ri:file-pdf-2-line",
    },
    {
      name: "Code",
      url: "https://github.com/soizhiwen/TimeWak",
      icon: "ri:github-line",
    },
    {
      name: "arXiv",
      url: "https://arxiv.org/abs/2506.06407",
      icon: "academicons:arxiv",
    },
  ],
  description:
    "We propose TimeWak, the first sampling-time watermark for multivariate time series diffusion models, featuring temporal chained-hashing with ϵ-exact inversion.",
  // image: "thumbnail.webp",
};

import method from "../assets/timewak/method.webp";
import scatter24 from "../assets/timewak/scatter_24.webp";
import scatter64 from "../assets/timewak/scatter_64.webp";
import scatter128 from "../assets/timewak/scatter_128.webp";
import tprs from "../assets/timewak/tprs.webp";
import attack64 from "../assets/timewak/attack_64.webp";
---

<AcademicLayout frontmatter={metadata}>
  <section class="py-8">
    <div class="max-w-7xl mx-auto">
      <Figure>
        <Image slot="figure" source={method} altText="Overview of TimeWak." />
      </Figure>
      <p class="mt-2">
        First, we assign random seeds at the beginning of each interval. <span
          class="btn btn-outline btn-circle btn-xs">1</span
        >
        Temporally chained-hashing. A, B, and C (<span
          style="background-color: #FF93CD">pink</span
        >) show seeds being copied from the previous step and the feature order
        shuffled. <span class="btn btn-outline btn-circle btn-xs">2</span> Shuffling
        the seeds for each series. Positional indices are highlighted in <span
          style="background-color: #47FF9D">green</span
        >. <span class="btn btn-outline btn-circle btn-xs">3</span> Constructing
        an initial Gaussian noise. <span
          class="btn btn-outline btn-circle btn-xs">4</span
        > Generating multivariate time series. <span
          class="btn btn-outline btn-circle btn-xs">5</span
        > Reversing the diffusion process. <span
          class="btn btn-outline btn-circle btn-xs">6</span
        > Recovering the watermark seed. <span
          class="btn btn-outline btn-circle btn-xs">7</span
        > Unshuffling the seeds in the opposite way they were shuffled. <span
          class="btn btn-outline btn-circle btn-xs">8</span
        > Bit accuracy between the hash and recovered seed.
      </p>
    </div>
  </section>

  <section class="py-8">
    <div class="max-w-2xl mx-auto">
      <h2 class="text-3xl text-center font-medium pb-4">Abstract</h2>
      <p>
        Synthetic time series generated by diffusion models enable sharing
        privacy-sensitive datasets, such as patients' functional MRI records.
        Key criteria for synthetic data include high data utility and
        traceability to verify the data source. Recent watermarking methods
        embed in homogeneous latent spaces, but state-of-the-art time series
        generators operate in real space, making latent-based watermarking
        incompatible. This creates the challenge of watermarking directly in
        real space while handling feature heterogeneity and temporal
        dependencies. We propose TimeWak, the first watermarking algorithm for
        multivariate time series diffusion models. To handle temporal dependence
        and spatial heterogeneity, TimeWak embeds a temporal chained-hashing
        watermark directly within the real temporal-feature space. The other
        unique feature is the ϵ-exact inversion, which addresses the non-uniform
        reconstruction error distribution across features from inverting the
        diffusion process to detect watermarks. We derive the error bound of
        inverting multivariate time series, while preserving robust watermark
        detectability. We extensively evaluate TimeWak on its impact on
        synthetic data quality, watermark detectability, and robustness under
        various post-editing attacks, against five datasets and baselines of
        different temporal lengths. Our results show that TimeWak achieves
        improvements of 61.96% in context-FID score, and 8.44% in correlational
        scores against the strongest state-of-the-art baseline, while remaining
        consistently detectable.
      </p>
    </div>
  </section>

  <section class="py-8">
    <div class="max-w-7xl mx-auto">
      <h2 class="text-3xl text-center font-medium pb-4">
        Synthetic Data Quality and Watermark Detectability
      </h2>
      <ThreeColumns>
        <Figure slot="left">
          <Image
            slot="figure"
            source={scatter24}
            altText="Scatter 24-length."
          />
          <Fragment slot="caption">24-length</Fragment>
        </Figure>
        <Figure slot="center">
          <Image
            slot="figure"
            source={scatter64}
            altText="Scatter 64-length."
          />
          <Fragment slot="caption">64-length</Fragment>
        </Figure>
        <Figure slot="right">
          <Image
            slot="figure"
            source={scatter128}
            altText="Scatter 128-length."
          />
          <Fragment slot="caption">128-length</Fragment>
        </Figure>
      </ThreeColumns>
      <p class="mt-2">
        TimeWak consistently delivers top-tier performance across all metrics,
        outperforming or comparable to other baselines like HTW and TabWak<sup
          >⊤</sup
        >. Although HTW achieves higher-quality results, it fails to offer
        strong detectability, as reflected in its low Z-scores. In contrast,
        TimeWak and TabWak<sup>⊤</sup> offer a far more favorable trade-off between
        quality and detectability.
      </p>
    </div>
  </section>

  <section class="py-8">
    <div class="max-w-7xl mx-auto">
      <h2 class="text-3xl text-center font-medium pb-4">TPR@0.1%FPR</h2>
      <Figure>
        <Image slot="figure" source={tprs} altText="TPR@0.1%FPR." />
      </Figure>
      <p class="mt-2">
        We present the TPR@0.1%FPR metric against the number of samples across
        five datasets under 24, 64 and 128 window sizes. In most cases, TimeWak
        consistently outperforms other baselines, such as Gaussian Shading and
        TabWak<sup>⊤</sup>, by achieving significantly higher TPR values.
        Notably, TimeWak reaches a perfect 1.0 TPR@0.1%FPR in the majority of
        scenarios, with 7 cases requiring only a single sample and 4 cases
        needing just 2 samples, demonstrating its strong detectability with
        minimal data requirements.
      </p>
    </div>
  </section>

  <section class="py-8">
    <div class="max-w-7xl mx-auto">
      <h2 class="text-3xl text-center font-medium pb-4">
        Robustness Against Post-Editing Attacks
      </h2>
      <Figure>
        <Image slot="figure" source={attack64} altText="Attack 64-length." />
      </Figure>
      <p class="mt-2">
        We present the Z-scores of 64-length watermarked synthetic time series
        data under three attacks, and averaged over 100 trials. Random cropping
        at 30% proves especially challenging, with several methods showing
        negative Z-scores. Nevertheless, TimeWak demonstrates the best overall
        robustness, consistently outperforming all baselines across most attack
        scenarios while maintaining high generation quality and accurate
        watermark detection.
      </p>
    </div>
  </section>

  <section class="py-8">
    <div class="max-w-4xl mx-auto">
      <h2 class="text-3xl font-medium pb-4">Citation</h2>

      <Code
        code=`@inproceedings{soi2025timewak,
  title        = {TimeWak: Temporal Chained-Hashing Watermark for Time Series Data},
  author       = {Zhi Wen Soi and Chaoyi Zhu and Fouad Abiad and Aditya Shankar and Jeroen M. Galjaard and Huijuan Wang and Lydia Y. Chen},
  booktitle    = {NeurIPS},
  year         = {2025},
}`
        lang="bibtex"
      />
    </div>
  </section>
</AcademicLayout>
